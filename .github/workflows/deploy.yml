name: Deploy to GitHub Pages

on:
  # Trigger the workflow every time you push to the `main` branch
  # Using a different branch name? Replace `main` with your branchâ€™s name
  push:
    branches: [main]
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v3
      - name: Change working directory to ./apps/docs
        working-directory: ./apps/docs
        run: |
          # This step will change the working directory to ./apps/docs
          # No commands needed here, the working directory will be changed for the subsequent steps

      - name: Install, build, and upload your site
        uses: withastro/action@v0
        # with:
        # path: . # The root location of your Astro project inside the repository. (optional)
        # node-version: 16 # The specific version of Node that should be used to build your site. Defaults to 16. (optional)
        # package-manager: yarn # The Node package manager that should be used to install dependencies and build your site. Automatically detected based on your lockfile. (optional)

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Change working directory to ./apps/docs
        working-directory: ./apps/docs
        run: |
          # This step will change the working directory to ./apps/docs
          # No commands needed here, the working directory will be changed for the subsequent steps

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
        # with:
        # branch: main # Branch to push to GitHub Pages (you can change this if needed)
        # folder: .dist # The folder to deploy to GitHub Pages (optional, default is the root of the repository)
        # If you want to specify a custom domain for your GitHub Pages site, you can use the custom_domain option.
